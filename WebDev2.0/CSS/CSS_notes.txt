Cascading Style Sheet
the adjective of web pg
-is a language
Pattern for writing CSS:
        selector {
            property: value;
        }
can write inline style on HTML file | BAD PRACTICE! 
-can include <style> at top of html inside of head to put all styling.
Best practice - write css in css file then link page to html by using <link> in head of html
    <link rel='stylesheet' href="styleSheet.css"> //href will be location of style sheet.

COLORS: (monitors display 16 mil different colors)
    Named colors - colors with specific names ie - mediumorchid, teal, etc - 140 colors total
    RGB (red, green, blue), specify amount of r, g, and b - between o and 255
        rgb(0,0,255) = blue = blue | rgb(173,20,219) = purple
        more color = lighter color, less color = dark (255,255,255)= white while (0,0,0)=black
    Hexidecimal, is base 16. each spot can be 0-9 or A-F (10-15). starts with #, and there are 2 slots for R, G, and B. It is written as #RRGGBB
        #0f5679 = dark blue green | #5FCFFC = light blue = some red, more blue, most green
        -can also have 3 digit Hexidecimal- #000000 can be #000 (b/c pairs are same) | #CC55EE (pink) can be #C5E
    HSL is another color system (not explained)

TEXT: 
    text align - left, right, center
    font weight - boldness - can use bold, lighter OR numbers 700 = bold, 400 - normal
    text decoration - decorative line - strike through, underline, etc. can set line type or remove default line
    line height - changes line spacing, not text size
    letter spacing - space between letters
    font size - metrics vary
        small, medium, large
        PX - absolute - does not = 1 px - not good for responsive websites
    font family - changes font type - not all computers have fonts, so you can list back up fonts to use if computer doesnt have specific font  
        font-family: arial, calibri; //can also list a font family

SELECTORS 
    * universal selector - selects everything
    Element selector (img, h1, etc) - selects every tag. Can also be separated by commas
    # ID selector - selects based on ID
    . Class selector - selects group with same class name
    Descendant selector 
        ElementSelectorIsInside selectorYouWant {
            attribute: value;
        }
    Adjacent Selector 
        ElementBeforeSelector selectorYouWant {
            attribute: value; 
        }
    Direct Child Selector   
        parentElement childSelectorYouWant {
            attribute: value;
        }
    attribute selector
        all inputs where type equals text
        input[type="text"] {
            attribute: value; 
        }
        -can also use other syntax
        a[href*='example'] = href contains example
        a[href$='.org'] = href ending in .org
        a[class~="logo"] = a whos class contains the word logo 
    PSEUDO CLASSES - keywords added to a selector that specifies a special stat of the selected Element
        :active-something being active (like onClick)
        :checked-checkbox is checked
        :first
        :first-child
        :hover-mouse is hovering
        :not()
        :nth-of-child()
        :nth-of-type() - every certain # (ie, every 3rd) or a specific#
            nth-of-type(3) 3rd
            nth-of-type(3n) every 3rd
        
        a:hover { //when achor tag is hovered over
            color:orange;
        }
    PSEUDO ELEMENT - keyworded added to selector that lets you style a particular part of selected Elements. Use :: to indicate pseudo element. ** if there's a beaker/flask icon next to element on MDN pg, it means it is experimental and shouldn't be used on production code.
        ::after
        ::before
        ::first-letter
        ::first-line 
        ::selection - any part of element which is highlighted by user
    The Cascade - the order your style and links are declared MATTERS!!! IE - declare icon link first, then css pg to ensure you can style the icons. 
Specificity - the more specific the selector the higher the weight for the CSS, when there are competing styles. IE - two background colors applied with one selecting element and the other using class. Class is more specific and will be used for styling.  
    https://specificity.keegan.st/

CHROME CSS DEV TOOLS - in inspector it will show all styles and which ones are added but not applied. Can also play with styling in dev tools to see what changes would look like

INLINE STYLE - styling in the same line of HTML, will over ride css. Not good practice anyway

IMPORTANT RULE - when something is labeled as !important, will over ride all other styling. IE - class styling below would override an ID styling. 
Not good practice
    .someElement {
        color: firebrick !important;
    }

INHERITANCE - some properties will be inherited by child elements. IE setting color to body. Body has no text, but has elements which has text. The text inherit color from body. certain elements do not naturally inherit, IE - buttons. You can set element to inherit   
        body {
            color: green;
        }
        button {
            color: inherit; 
        }

BOX MODEL - everything has a box around it which contain: inner content, padding, border, and margin

BORDER - 
    border-box - width will go from border to border. will take away from border width to ensure entire content does not exceed width
        div {
            border-width: 5px;
            box-sizing: border-box;
        }
    border can set width, style, and color in one line
            border: 3px dashed red;

PADDING - 
    single line padding will adjust 
        -1 value will affect all 4 sides
            padding: 10px;
        -2 values, 1st is vertical values, 2nd is horizontal
            padding: 5px 15px
        -3 values, top, horizontal, bottom
            padding: 10px 25px 20px
        -4 values, top, right, bottom, left
            padding: 15px 30px 5px 5px

MARGIN - 
    ***remember body contains slight margin, which will impact element margin***
    single line formatting is same as padding (above)
    -inline elements may not behave as intended with margin - use display property (below) to fix
    
DISPLAY PROPERTY
    INLINE - makes element inline IE - if used on H1, would change 
    BLOCK - makes element block level IE- spans would change
    INLINE-BLOCK - behaves like inline element, except height, margin, and padding are respected. 
    NONE - will basically hide element, but will still be on pg, just not visible

UNITS/MEASUREMENTS 
    Relative - size is dependent on another element 
        EM - FONT -1em = font size of parent, 2em = twice parent font size
            NON FONT (ie-margin) - 1em = computed font size of element itself
                h2 {
                    font-size: 2em; //twice the parent font size
                    margin-left: 1em //margin size matches font size above
                }
        REM - root em - use to avoid "stacking" em size in things like nested lists. Is relative to ROOT HTML ELEMENT <html>
        VH 
        % - will be a percentage of the something else
            width/height - would be % of parent 
            line-height - % of font size
    Absolute - size does not change
        PX - pixel, not exactly one pixel
        PT 
        CM 
        IN 
        MM 
OPACITY & ALPHA - transparency - is from 0 (transparent) to 1 (not transparent)
    ALPHA - only affects the element the color is set to, none of the child elements.
        RGB - add # at the end - is from 0 (transparent) to 1 (not transparent)
            color: rgba(01, 10, 80, 0.5) //navy blue text w/half transparency
        HEX - add two char at the end from 00 to 5FCFFC
            color: #80808080 //grey at half transparency
    OPACITY - will affect entire element and contents
        opacity: 0.3 //all contents of element will be slightly opaque 

POSITION - sets how an element is positioned in a document. Use top, right, bottom, left to determine the final location of positioned elements
    
    Static - positioned based on normal flow of doc.    *this is the default position
        position: static 
    
    Relative - is positioned based on the normal flow, and then offset by using top, right, bottom, left. Creates a stacking context when z-index is specified
        position: relative
        top: 
    
    Absolute - element removed from normal doc flow, and no space is created for element. Position is relative to closest positioned ancestor. if no ancestor, then positioned relative to initial containing block. Final position determined by top, right, bottom, left  
        position: absolute
        top: 
    
    Fixed - element removed from normal doc flow, and no space is created for element. positioned relative to initial containing block established by viewport, EXCEPT ancestors has a transform, perspective, or filter property set.  Final position determined by top, right, bottom, left
        position: Fixed
        top: 
    
    Sticky -  "sticks" to its nearest ancestor that has a "scrolling mechanism". positioned based on normal flow of doc, then offset by nearest scrolling ancestor and containing block. Offset does not affect other elements. 
    //stays in position, and then sticks to top while scrolling

TRANSITIONS - animation to switch from one form into another. add in css transition with # of seconds. Can specify  
    property name, duration, timing function, delay
        *timing function - to specify how the transition should occur. IE, ease-in will start slower and finish faster
        
        transition: background-color 1s ease-in 1s
    great for :hover changes

TRANSFORM - allows you to warp, move, rotate, scale, etc. Select property and how to transform. More details: https://developer.mozilla.org/en-US/docs/Web/CSS/transform
    transform: rotate(45deg)
        rotate - rotates element 
        scale - change size (grow/shrink)
        translate - move element
        skey - adds a slant

BOX-SHADOW - x-offset, y offset, blur radius, spread radius, color

Background Image - set img
background-size:
    CONTAIN - scales img as large as possible w/o cropping (will repeat unless repeat set to no)
    COVER - scales img as large as possible w/cropping
    AUTO - scales img in coresponding direction so intrinsic proportions are maintained
    LENGTH - stretches img to specified length (no negative values)
    % - stretches img to coresponding dimensions
background-position - sets how img starts/aligned

WHITESPACE CHAR - if you have multiple IMG or SPAN on a single line, there isn't a space, however if you put them on separate lines, there will be whitespace you must account for. Not an issue if using FlexBox

