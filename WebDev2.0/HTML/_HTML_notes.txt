Hyper Text Markup Language
HTML5 - new version of html and larger set of technologies which allow for more powerful apps https://html.spec.whatwg.org/ will tell you how html should work
-considered the skeleton of a web page

Emmet - VSCode Ext - helps with vscode html markup | cheatsheet: https://docs.emmet.io/cheat-sheet/
    > - makes a child element. nav>ol>li makes nav with ol and li
    + - makes sibling elements h1+h2, makes h1 with adjacent h2
    * - makes multiple div>ul>li*5 makes ul with 5 lis, inside a div

HTML entities - sequence of char which create a special char all start with & and end with ; - List: https://dev.w3.org/html5/html-author/charref
    - reserved character, certain char which is important to code. IE the < are used to wrap around tags, therefore html entity should be used &lt; or & should be &amp;

-comments = <!-- comment  -->
-<p> block level element
-boiler plate: 
    - <!DOCTYPE html> = flag to let browser know to use html 5
    - <html> - root element which represents top level element
        -inslde contains: <head> holds meta data
                            <title> what is shown on tab and title of google search results
                         <body> holds contents of web page
        SHORTCUT = !+TAB = adds basic html boilerplate
-List <ul> unordered list <ol> ordered list
    inside include <li> list item | <script> <template> are also allowed
-<a> anchor tag - are inline element. includes attribute
    href="http://www.url.com"
-image <img src="fileLocation"> alt offers text description of img | no closing tag
-<div> block level - division element - generic container used to group content 
-span inline element - another generic container
- <hr> horizontal rule (divider)
- <br> break - like using the enter key
- <sup> superscript <sub> subscript 
- semantic markup - meaningful markup - IE, using header instead of div. essential for screen readers, SEL, 
    figure, time, aside, header, footer, main, nav - basic containers used in semantic markup

- <form> container to group form controls - used to specify how and where data should be sent 
    action attribute is where info should go
    <input> - no closing tag, and have to specify type of input. ID will create a way to identify
        -name attribute is referring to data collected in input 
    <label> has for attribute which should match input id attribute 
    
    <p>
        <label for='username'>Enter user name</label>
        <input id='username' type='text' placeholder="Username" name="user">
    </p>
    or NESTED:
        <p>
        <label>Enter user name
            <input type='text' placeholder="Username" name='user'>
        </label>
        
    </p>
    <button> - inside form default behavior will submit form. can add type = "button", then it won't submit. Can also use <input type = "submit" value="click me!!!>
    -Form Validations- constraints to ensure input values conform
        -required - field cannot be blank
        -min/maxlength - require field to be between certain # of char
        Built in validation - input type = email | must have char, then @, and finish w/char
            url - will look for urlScheme//more text




FILE CONTENT: 
chicken.html - bold tag <b>, header <H1>, paragraph <p>, <li>

Pangolin_Practice.html - heading and paragraph elements

fav_movie.html - lists

chickens_about.html - image and links

wolf_img_and_link.html - link and image